
[{"content":" Blowfish 包含了大量的特性功能。 Blowfish 的目标是开发一个简单且轻量级的主题。 该主题是 Congo 的一个分支，并进行了大量扩展。\nTailwind CSS 3.0 # Tailwind CSS 是 Blowfish 的核心，当前版本包含了最新的Tailwind CSS version 3。 Tailwind CSS 带来了性能优化，并提供了一些出色的新的 CSS 特性。\n多语言支持 # 这是一个高频需求，Blowfish 现在支持多语言！ 如果你使用多语言发布你的内容，网站将会构建包含所有可用翻译的版本。\n:gb: :de: :fr: :es: :cn: :brazil: :tr: :bangladesh: 感谢社区的贡献，目前 Blowfish 已经翻译成二十六种语言，并且随着时间的推移还会支持更多。 顺便一提，欢迎你为支持新语言提交 PR。\n支持 RTL 语言 # 新版本的Tailwind和多语言特性可以支持 RTL 语言。\n启用 RTL 后，整个网站将会从右到左重新生成内容。主题中的所有元素都会重新风格化，以适应这种模式，有助于 RTL 语言者。\nRTL 是基于单独语言控制的，所以你可以在项目中通过支持多语言来混合使用 RTL 和 LTR，主题会相应做出适配。\n自动调整图片大小 # Blowfish 2.0版本的重大变化是增加了自动调整图片大小的功能。基于 Hugo Pipes 提供的能力，实现了 Markdown 中的图片自动缩放到不同尺寸的功能。同时 Blowfish 2.0 还支持了 HTML srcset 以实现响应式图像，这能够为访问者优化图片大小。\n\u0026lt;!-- Markdown: ![My image](image.jpg) --\u0026gt; \u0026lt;img srcset=\u0026#34; /image_320x0_resize_q75_box.jpg 320w, /image_635x0_resize_q75_box.jpg 635w, /image_1024x0_resize_q75_box.jpg 1024w, /image_1270x0_resize_q75_box.jpg 2x\u0026#34; src=\u0026#34;/image_635x0_resize_q75_box.jpg\u0026#34; alt=\u0026#34;My image\u0026#34; /\u0026gt; 当然这一切都不需要你做任何改动！只需要在 Markdown 中插入标准的图片元素，Blowfish 主题会自动帮你完成这些。\n如果你想要图片变得更可控一些，你可以使用短代码 figure 。 figure 已经被完全重写，用于提供类似调整大小的功能优势。\n站点搜索 # 基于 Fuse.js 提供的模糊搜索，访问者可以快速轻松地找到想要的内容。所有的模糊搜索都在客户端完成，不需要服务端做任何配置，同时保证了搜索的执行速度。只需要你在网站配置中启用这个功能就可以运行！哦，它甚至还支持全键盘导航！\n目录 # 这也是一个高频的需求，Blowfish 现在支持在文章内容页面中使用目录。你可以在本页面看到它的实际效果。目录完全是响应式的，并且会在不同屏幕分辨率下进行自动调整。\n目录可以给予全局或者每篇文章，也可以使用标准的 Hugo 配置来完全定制化，允许你根据自己的项目调整。\n可访问性改进 # 这个版本是至今为止最易访问的！Blowfish 不仅为更多项目提供了 ARIA 描述，还简单地调整了某些文本元素的对比度。\n不仅如此，Blowfish 2.0 引入了 “跳转到内容” 和 “滚动到顶部” 的功能，使得导航更加便捷。你甚至可以仅用键盘快捷键来使用像搜索这样的功能，不需要使用鼠标哦~\n新功能图片大小调节还提供了对 alt 和 title 元素的完全控制，为所有访问者提供一个无障碍的体验。\n更多更多 # 当然还有无数其他的功能等待你的探索。例如在文章和列表页面显示分类、使用 headline 作者参数来定制你的主页，还有使用改进 JSON-LD 结构化数据，从而进一步优化了 SEO 性能等等。\n结语 # 欢迎来尝试和探索强大而轻量的 Blowfish 2.0，打造优雅、个性化的创作之旅！\n如果你对 Blowfish 有更加创意的想法，欢迎随时提交，期待与你共同营造 Blowfish 的开源文化！\n","externalUrl":null,"permalink":"/docs/welcome/","section":"文档","summary":"Blowfish 包含了大量的特性功能。 Blowfish 的目标是开发一个简单且轻量级的主题","title":"欢迎来到 Blowfish","type":"docs"},{"content":"","externalUrl":"https://www.50-nuances-octets.fr/","permalink":"/users/50-nuances-octets.fr/","section":"用户列表","summary":"","title":"50-nuances-octets.fr","type":"users"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/tags/blowfish/","section":"标签","summary":"","title":"Blowfish","type":"tags"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/categories/blowfish/","section":"Categories","summary":"","title":"Blowfish","type":"categories"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/tags/hugo/","section":"标签","summary":"","title":"Hugo","type":"tags"},{"content":"假装这里有一份 Nuno 的简介。\n","date":"2023-10-04","externalUrl":null,"permalink":"/authors/nunocoracao/","section":"作者列表示例","summary":"假装这里有一份 Nuno 的简介。","title":"Nuno Coração","type":"authors"},{"content":"Blowfish 支持基于 Hugo 的所有分类方法。同时，当前的标签预览页也支持展示自定义内容。\n在这里可以为每个分类添加额外的描述信息。查看下面的高级标签页面，了解更多。\n","date":"2023-10-04","externalUrl":null,"permalink":"/tags/","section":"标签","summary":"Blowfish 支持基于 Hugo 的所有分类方法。同时，当前的标签预览页也支持展示","title":"标签","type":"tags"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/","section":"欢迎来到 Blowfish! 🎉","summary":"","title":"欢迎来到 Blowfish! 🎉","type":"page"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/categories/%E5%BC%80%E6%BA%90/","section":"Categories","summary":"","title":"开源","type":"categories"},{"content":"一年前我创建了 Blowfish，这是一个为了打造我的个人主页而精心设计的 Hugo 主题。我决定将其作为一个开源项目。直到今天，Blowfish 已经变成了一个蓬勃发展的开源项目，在 GitHub 上拥有超过900个 star 和数百名用户。在本教程中，我将向你展示如何搭建并在几分钟内让你的网站运行起来。\nnunocoracao/blowfish Personal Website \u0026amp; Blog Theme for Hugo HTML 1327 380 TL;DR # 本指南的目标是指导新用户如何使用 Hugo 快速安装、管理和发布自己的网站。最终的版本可以看这个代码库——如果你想直接跳到结尾的话可以直接看这里。\n视觉风格只是 Blowfish 提供的众多特性之一。想要了解更多，我们鼓励你浏览文档，学习如何根据自己的需求自定义主题。另外，已经有许多其他用户使用该主题并提供了十分优秀的示例，来为你提供灵感。Blowfish 还提供了一些额外的基于 短代码 的功能——你可以在这里查看它们以获取更多灵感。\n设置你的环境 # 让我们从安装工具开始。本指南涵盖了在 Mac 操作系统下的步骤，这些命令可能不适用于你的硬件和操作系统。如果你使用的是 Windows 或 Linux，请参考文档：安装 Hugo 和GitHub CLI。\n无论如何，如果你使用的是 MacOS，那么首先需要安装 brew ——一个专为 MacOS 的包管理器，这将有助于安装和管理其他工具。\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\u0026#34; 安装完成 brew 后，让我们安装 Git, Hugo 和 GitHub CLI。\nbrew install git brew install hugo brew install gh 为你的网站代码创建一个文件夹，并在终端中打开（我在下面创建了 blowfish-tutorial 文件夹，当然你可以将其重命名为任何名称）。\nmkdir blowfish-tutorial cd blowfish-tutorial 进入文件夹后的下一步，就是初始化你本地的 git 仓库。\ngit init -b main 现在，让我们创建并同步本地仓库到 GitHub 仓库，这样你的代码就可以在远程存储。\ngh auth login gh repo create git push --set-upstream origin main 查看下面的图片，这是我的远程仓库的地址。同样地，你也可以随意更改以适应你自己的 GitHub 仓库。\n最后，创建一个 .gitignore 文件，它会自动排除某些文件，以防止这些文件传到远程仓库。下面的例子是我在 .gitignore 文件中添加的文件和文件夹。\n#others node_modules .hugo_build.lock # OS generated files .DS_Store .DS_Store? ._* .Spotlight-V100 .Trashes # Hugo public 最后一步是保存所有更改，并推送到你的远程仓库中。 The last step is to save all the changes to the repo.\ngit add . git commit -m “initial commit” git push 创建并配置站点 # 所有的准备工作就绪后，创建和配置你的站点将会很容易。继续在上一部分你创建的文件夹内，让我们首先创建一个空的 Hugo 网站（不关联任何主题）。\nhugo new site --force . 执行完成后，尝试用下面的命令来运行你的网站。打开浏览器并访问 https://localhost:1313 即可查看你的网站。\nhugo server emmmm… 页面未找到404了，是吧？ 这是预期内的，你创建了一个空白网站，Hugo 不会添加任何默认的页面——换句话说，你的网站还没有任何页面可以显示。\n下一步，让我门使用 git submodules 来安装 Blowfish。通过 git submodules 安装可以让以后管理和升级 Blowfish 主题更加方便。\ngit submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish 接下来，在你的代码根目录下创建 config/_default/ 文件夹。现在你需要下载这些文件，并把它们放在刚刚创建的 _default 文件夹内。最终的文件结构看起来应该是这样的。\nconfig/_default/ ├─ config.toml ├─ languages.en.toml ├─ markup.toml ├─ menus.en.toml └─ params.toml ` 打开 config.toml 并把 theme = \u0026ldquo;blowfish” 这一样的注释取消掉，目前为止你已经准备好了。再次尝试运行网站，并打开浏览器在_https://localhost:1313_查看效果。\nhugo server 你应该能看到下面这样。目前我们还没有添加任何内容，所以还没有页面，但是 Blowfish 主题已经准备就绪，下面只需要配置。\n现在我们来配置主题。\n仅供参考 本指南不会详细介绍 Blowfish 中的所有特性和参数——如果想要了解所有的功能特性和参数，以及如何使用它们，请参考Blowfish 文档。 menus.en.toml # 这个文件定义了你的顶部（banner）和底部（footer）的菜单结构。对于本指南，我们只使用菜单的这两部分：Posts 和 Tags。\nPosts - 用于展示网站中的所有内容条目的完整列表 Tags - 自动生成每篇文章的标签 为了实现这一点，请确保 menus.en.toml 文件中设置了以下参数。完成修改后，重新运行hugo server，你将会看到顶部菜单。\n[[main]] name = \u0026#34;Posts\u0026#34; pageRef = \u0026#34;posts\u0026#34; weight = 10 [[main]] name = \u0026#34;Tags\u0026#34; pageRef = \u0026#34;tags\u0026#34; weight = 30 languages.en.toml # 这个文件配置了网站作者的详细信息。修改下面的内容来定义你自己的信息。\n[author] name = \u0026#34;名字在这\u0026#34; image = \u0026#34;profile.jpg\u0026#34; headline = \u0026#34;我是个好人\u0026#34; bio = \u0026#34;关于我的二三事\u0026#34; # 出现在每篇文章的作者卡片中 网站的图片需要防止在 assets 文件夹内。针对这一步，请将一张你的个人图片添加到这个文件夹，并命名为 profile.jpg。 你可以修改这个文件名，确保文件名和上面个人信息中 image 的参数值对应就行。如果你没有个人图片可用，你可以使用下面的图片继续教程。\nassets/profile.jpg 最后一步是配置你的链接——社交媒体、GitHub 等等。该文件包含了所有支持的链接选项，不过他们被注释掉了。你可以将你希望展示的个人链接的配置项接触注释，也可以替换他们的展示顺序。\nparams.toml # 这个文件是 Blowfish 的配置文件。大部分的视觉选项或自定义的选项可以通过它进行配置，它涵盖了 Blowfish 主题的多个功能特性。 对于本指南，我决定使用 background 布局，你也可以查看Blowfish主题其他的主页布局；同时使用了 Neon 颜色方案，你可以查看完整的颜色方案列表或者创建自己的颜色方案。\n将 image.jpg 文件添加到 assets 文件夹，它将会作为网站的背景。你可以挑选自己喜欢的，当然也可以用本指南中使用的这张图。\nassets/image.jpg 现在让我们打开 params.toml 并开始配置。在这里我只会关注需要修改的值，不要再没看文档的情况下，删除此文件的其余部分。\n首先让我们确保上面提到的正确的颜色方案，开启图片优化，并设置默认背景图片。\ncolorScheme = \u0026#34;neon\u0026#34; disableImageOptimization = false defaultBackgroundImage = \u0026#34;image.jpg\u0026#34; # used as default for background images 接下来，让我们配置首页。我们选择了 background 布局，配置首页图片和最近文章。此外，可以使用 card view 卡片展示的方式来展现最新文章。最后让我们配置头部固定。\n[homepage] layout = \u0026#34;background\u0026#34; # valid options: page, profile, hero, card, background, custom homepageImage = \u0026#34;image.jpg\u0026#34; # used in: hero, and card showRecent = true showRecentItems = 6 showMoreLink = true showMoreLinkDest = \u0026#34;/posts\u0026#34; cardView = true cardViewScreenWidth = false layoutBackgroundBlur = true # only used when layout equals background [header] layout = \u0026#34;fixed\u0026#34; 现在配置文章和列表页面的展示。下面是他们的配置。\n[article] showHero = true heroStyle = \u0026#34;background\u0026#34; showSummary = true showTableOfContents = true showRelatedContent = true relatedContentLimit = 3 [list] showCards = true groupByYear = false cardView = true 如果你再次运行hugo server，你会看到类似下面这张图的效果。 If you run hugo server again, you should see something like the image below.\n在你的网站中添加内容 # 创建一个文件夹/content/posts，在这个文件夹下添加你的帖子或文章。这也是你在菜单所配置的所有文章的根目录。在这个文件夹内，让我们创建一个新目录并命名为 myfirstpost。在这个目录中创建一个index.md文件作为你的文章，同样也在这个目录中添加featured.jpg或featured.png作为文章的缩略图。 参考下面这个示例。文件中的前几行是扉页参数（Front Matter），它定义了 Hugo 如何展示文章，更多的参数可以参考这里。\n--- title: \u0026#34;我的第一篇帖子\u0026#34; date: 2023-08-14 draft: false summary: \u0026#34;这是网站的第一篇你帖子\u0026#34; tags: [\u0026#34;space\u0026#34;] --- ## 一个副标题 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nibh nisl, vulputate eu lacus vitae, maximus molestie libero. Vestibulum laoreet, odio et sollicitudin sollicitudin, quam ligula tempus urna, sed sagittis eros eros ac felis. In tristique tortor vitae lacinia commodo. Mauris venenatis ultrices purus nec fermentum. Nunc sit amet aliquet metus. Morbi nisl felis, gravida ac consequat vitae, blandit eu libero. Curabitur porta est in dui elementum porttitor. Maecenas fermentum, tortor ac feugiat fringilla, orci sem sagittis massa, a congue risus ipsum vel massa. Aliquam sit amet nunc vulputate, facilisis neque in, faucibus nisl. 你可以创建其他文章，来查看和验证站点的效果。你的网站应该像下面的图片一样。 主页显示最近的文章，每篇文章通过相关部分自动关联其他文章，有标签聚合和全文搜索。\n发布它 # 现在只剩下发布你的网站了。我将会使用 Firebase 作为托管服务——这是一个免费的替代方案，如果你创建了更复杂的东西，它提供了高级功能。前往 Firebase 创建一个新项目，然后我们切换到 CLI 终端，这将是配置 Firebase 更加简单。\n让我们安装 Firebase CLI 工具 —— 如果你不是 MacOS，请查看 Firebase安装指南。\nbrew install firebase 现在登录并为你的项目初始化firebase托管服务。\nfirebase login firebase init 选择托管并继续。\n按照下面的图片进行，这是我推荐的方式。确保设置了 GitHub actions 工作流文件。这将保证你的 GitHub 仓库一旦有变化，就会立刻同步部署。\n然而，这些文件不会立刻开始运行，因为 Hugo 需要额外的步骤来提前构建。将下面的代码复制并粘贴到 .github 文件夹，同时保留文件中 firebase 生成的projectId。\nfirebase-hosting-merge.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on merge \u0026#39;on\u0026#39;: push: branches: - main jobs: build_and_deploy: runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy Production uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; channelId: live projectId: blowfish-tutorial firebase-hosting-pull-request.yml # # This file was auto-generated by the Firebase CLI # https://github.com/firebase/firebase-tools name: Deploy to Firebase Hosting on PR \u0026#39;on\u0026#39;: pull_request jobs: build_and_preview: if: \u0026#39;${{ github.event.pull_request.head.repo.full_name == github.repository }}\u0026#39; runs-on: ubuntu-latest steps: - name: Hugo setup uses: peaceiris/actions-hugo@v2.6.0 env: ACTIONS_ALLOW_UNSECURE_COMMANDS: \u0026#39;true\u0026#39; - name: Check out code into the Go module directory uses: actions/checkout@v4 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Build with Hugo env: # For maximum backward compatibility with Hugo modules HUGO_ENVIRONMENT: production HUGO_ENV: production run: hugo -E -F --minify -d public - name: Deploy preview uses: FirebaseExtended/action-hosting-deploy@v0 with: repoToken: \u0026#39;${{ secrets.GITHUB_TOKEN }}\u0026#39; firebaseServiceAccount: \u0026#39;${{ secrets.FIREBASE_SERVICE_ACCOUNT_BLOWFISH_TUTORIAL }}\u0026#39; expires: 30d channelId: preview-${{ github.event.number }} projectId: blowfish-tutorial 最后一步是将你的代码提交到 GitHub，提交成功后 GitHub actions 工作流将会自动触发，并构建和部署你的网站。\ngit add . git commit -m \u0026#34;add github actions workflows\u0026#34; git push 你的 GitHub 仓库中的 actions 模块，将会显示类似下图的内容。\n当所有步骤完成之后，你的 Firebase 控制台将会显示类似下图的内容，包括一个可以查看网站的链接。我在https://blowfish-tutorial.web.app/中运行了这个教程。 Once all the steps finish, your Firebase console should show something like the image below - including the links to see your app – I got a version of this tutorial running on https://blowfish-tutorial.web.app/.\n结论和下一步 # 现在你有了主页的第一个版本。你可以在本地进行更改，只要你提交代码，将会自动展示在你的网站中。 那么接下来要做什么呢？我给你留了一下链接，相信会对你有所帮你，其它这些链接会让你获得灵感并了解更多 Blowfish 和 Hugo 的内容。 Now you have your first version of your homepage. You can make changes locally and once you commit your code they will automatically be reflected online. What shall you do next? I’ll leave you with some useful links to get you inspired and learn more about Blowfish and Hugo.\nhttps://blowfish.page/docs/ https://blowfish.page/docs/configuration/ https://blowfish.page/docs/shortcodes/ https://blowfish.page/examples/ https://blowfish.page/users/ https://gohugo.io/documentation/ ","date":"2023-10-04","externalUrl":"https://nunocoracao.com/posts/202310-blowfish-tutorial/","permalink":"/guides/202310-blowfish-tutorial/","section":"使用指南","summary":"一年前我创建了 Blowfish，这是一个为了打造我的个人主页而精心设计的 Hugo 主题。我决定将其作为一个开源项目。直到今天，Blowfish 已经变成了一个蓬勃发展的开源项目，在 GitHub 上拥有超过900个 star 和数百名用户。在本教程中，我将向你展示如何搭建并在几分钟内让你的网站运行起来。","title":"使用 Blowfish和 Hugo 构建你的主页","type":"guides"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/guides/","section":"使用指南","summary":"","title":"使用指南","type":"guides"},{"content":"","date":"2023-10-04","externalUrl":null,"permalink":"/tags/%E6%8C%87%E5%8D%97/","section":"标签","summary":"","title":"指南","type":"tags"},{"content":"在你的文章中添加不同作者的简单示例。\n","date":"2023-10-04","externalUrl":null,"permalink":"/authors/","section":"作者列表示例","summary":"在你的文章中添加不同作者的简单示例。","title":"作者列表示例","type":"authors"},{"content":"","date":"2020-08-14","externalUrl":null,"permalink":"/tags/%E7%A4%BA%E4%BE%8B/","section":"标签","summary":"","title":"示例","type":"tags"},{"content":"这里有使用 Blowfish 构建的网站实例。点击这里以 JSON 形式查看完整列表。\n您也是 Blowfish 用户？ 提交 PR来把你的网站加入此列表。 ","date":"2020-08-14","externalUrl":null,"permalink":"/users/","section":"用户列表","summary":"这里有使用 Blowfish 构建的网站实例。点击这里以 JSON 形式查看完整列表。 您","title":"用户列表","type":"users"},{"content":"","date":"2020-08-14","externalUrl":null,"permalink":"/tags/%E5%8F%8B%E9%93%BE/","section":"标签","summary":"","title":"友链","type":"tags"},{"content":"","date":"2019-03-11","externalUrl":null,"permalink":"/tags/css/","section":"标签","summary":"","title":"Css","type":"tags"},{"content":"","date":"2019-03-11","externalUrl":null,"permalink":"/tags/html/","section":"标签","summary":"","title":"Html","type":"tags"},{"content":"","date":"2019-03-11","externalUrl":null,"permalink":"/tags/markdown/","section":"标签","summary":"","title":"Markdown","type":"tags"},{"content":"本文提供了可在 Blowfish 中使用的基本 Markdown 格式示例，还展示了如何加入一些基本 HTML 元素。\n标题 # 以下 HTML 元素 \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; 表示六个级别的标题。 \u0026lt;h1\u0026gt; 是最高的标题级别，而 \u0026lt;h6\u0026gt; 是最低的。\nH1 # H2 # H3 # H4 # H5 # H6 # 段落 # Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\n块引用 # 块引用表示从其他来源引用的内容，可以用于位于 footer 或 cite 元素内的引文，并且可以表示一些补充说明（例如注释和缩写）。\n没有参考链接的块引用 # Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\n有参考链接的块引用 # Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\n表格 # 表格不是核心 Markdown 规范的一部分，但 Hugo 支持渲染。\nName Age Bob 27 Alice 23 表格内内联 Markdown # Italics Bold Code italics bold code 代码块 # 带反引号的代码块 # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 缩进四个空格的代码块 # \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 带有 Hugo 内部高亮简码的代码块 # 1 2 3 4 5 6 7 8 9 10 \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; 列表 # 有序列表 # First item Second item Third item 无序列表 # List item Another item And another item 嵌套列表 # Fruit Apple Orange Banana Dairy Milk Cheese 其他元素 — abbr、sub、sup、kbd、mark # GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\n上述引文摘自 Rob Pike 在 2015 年 11 月 18 日 Gopherfest 期间的谈论“什么都没有”。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11","externalUrl":null,"permalink":"/samples/markdown/","section":"示例","summary":"\u003cp\u003e本文提供了可在 Blowfish 中使用的基本 Markdown 格式示例，还展示了如何加入一些基本 HTML 元素。\u003c/p\u003e","title":"Markdown","type":"sample"},{"content":" Blowfish 让你的内容栩栩如生。 \u0026#x1f60d; 本节包含一些示例页面，展示了Blowfish如何呈现不同类型的内容。你还可以参考标签页面的示例。\n旁注： 这个页面只是一个标准的Blowfish文章列表，并且已经配置了Hugo来生成一个 samples 内容类型并显示文章摘要。\n","date":"2019-03-11","externalUrl":null,"permalink":"/samples/","section":"示例","summary":"Blowfish 让你的内容栩栩如生。 \u0026#x1f60d; 本节包含一些示例页面，展示了Blow","title":"示例","type":"samples"},{"content":"","date":"1987-12-22","externalUrl":null,"permalink":"/tags/%E6%A8%A1%E6%9D%BF/","section":"标签","summary":"","title":"模板","type":"tags"},{"content":"感谢您愿意为 Blowfish 社区做出贡献。\n如何开始？ # 这是一篇模板文章，将解释如何为 Blowfish 的指南部分创建新文章。\nClone Blowfish 仓库 # 使用以下命令 clone 此仓库：\ngit clone https://github.com/nunocoracao/blowfish.git 配置您的文档 # 复制并粘贴您要创建的 .md 文档所在的整个文件夹。 使用 YYYYMM-\u0026lt;英文标题\u0026gt; 的格式（例如：200601-tutorial）命名文档，不允许有空格。\n编写您的指南 # 编写您的指南 :)\n在 img 文件夹中储存图像并按下述格式引用它们：\n![]() Image caption 提交 PR # 提交您的 PR ，Blowfish 团队在这里提前感谢您对我们这个项目的贡献。\n","date":"1987-12-22","externalUrl":null,"permalink":"/guides/template/","section":"使用指南","summary":"感谢您愿意为 Blowfish 社区做出贡献。 如何开始？ # 这是一篇模板文章，将","title":"使用指南模板","type":"guides"},{"content":"假装这里有一份第二位作者的简介。\n","externalUrl":null,"permalink":"/authors/secondauthor/","section":"作者列表示例","summary":"假装这里有一份第二位作者的简介。","title":"Dummy Second Author","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/series/%E9%83%A8%E7%BD%B2%E6%95%99%E7%A8%8B/","section":"Series","summary":"","title":"部署教程","type":"series"},{"content":"这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页添加自定义内容，这部分内容会显示在顶部。\u0026#x1f680;\n你也可以用这些内容来定义 Hugo 的元数据，比如标题和描述。这些内容可以被用来增强 SEO 或其他目的。\n","externalUrl":null,"permalink":"/tags/advanced/","section":"标签","summary":"这是高级标记。类似其他 Blowfish 中的其他列表页面，你可以在分类列表页","title":"高级","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/%E6%96%87%E6%A1%A3/","section":"标签","summary":"","title":"文档","type":"tags"},{"content":"","externalUrl":null,"permalink":"/docs/","section":"文档","summary":"","title":"文档","type":"docs"},{"content":"","externalUrl":null,"permalink":"/tags/%E6%96%B0%E6%89%8B/","section":"标签","summary":"","title":"新手","type":"tags"},{"content":"","externalUrl":null,"permalink":"/tags/%E7%BB%84%E7%BB%87%E7%AB%99%E7%82%B9/","section":"标签","summary":"","title":"组织站点","type":"tags"}]